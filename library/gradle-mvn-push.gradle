/*
 * Copyright 2013 Chris Banes
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

group = "com.afzaln"
project.archivesBaseName = "gifimageview"
project.version = VERSION_NAME

def pkgName = "GifImageView"
def pkgPackaging = "aar"
def description = "Android ImageView that handles animated GIF images"
def licenceName = "The MIT License (MIT)"
def licenceUrl = "https://github.com/afzalive/GifImageView/blob/master/LICENSE"
def licenceDistribution = "repo"
def developerId = "afzalive"
def developerName = "Afzal Najam"
def developerEmail = "afzalnaj@gmail.com"

def siteUrl = 'https://github.com/afzalive/GifImageView'      // Homepage URL of the library
def gitUrl = 'https://github.com/afzalive/GifImageView.git'   // Git repository URL


task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

def pomConfig = {
    licenses {
        license {
            name licenceName
            url licenceUrl
            distribution licenceDistribution
        }
    }
    developers {
        developer {
            id developerId
            name developerName
            email developerEmail
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId project.archivesBaseName
            version VERSION_NAME

            pom {
                packaging pkgPackaging
            }
            pom.withXml {
                def root = asNode()
                root.appendNode('description', description)
                root.children().last() + pomConfig
            }
        }
    }
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    publications = ['mavenJava']

//    dryRun = true
    publish = true

    pkg {
        repo = "maven"
        name = pkgName
        desc = description
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publicDownloadNumbers = true

        version {
            name = VERSION_NAME
            vcsTag = VERSION_NAME
        }
    }
}